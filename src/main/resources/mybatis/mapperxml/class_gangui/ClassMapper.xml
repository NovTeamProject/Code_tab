<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.team_project.class_gangui.mapper.ClassMapper">

    <!--    변재혁님 여기 아래부터 작성 시작-->
    <insert id="insertNewClass" parameterType="com.example.team_project.class_gangui.dto.ClassDTO"
            useGeneratedKeys="true" keyColumn="class_idx" keyProperty="classIdx">
        INSERT
        INTO class(class_name, class_explain, teacher_idx, class_total_time, class_total_lesson_count,
                   class_image_original_filename, class_image_saved_filename)
        VALUES(#{className}, #{classExplain}, #{teacherIdx}, #{classTotalTime}, #{classTotalLessonCount},
               #{classImageOriginalFilename}, #{classImageSavedFilename})
    </insert>

    <select id="getAllUploadedClassesCountFilteredByTeacherIdx">
        SELECT count(*)
        FROM class
        WHERE teacher_idx = #{teacherIdx}
    </select>

    <select id="getAllUploadedClassListFilteredByTeacherIdxWithPaging" parameterType="map"
            resultType="com.example.team_project.class_gangui.dto.ClassDTO">
        SELECT *
        FROM class
        WHERE teacher_idx = #{teacherIdx}
        ORDER BY teacher_idx DESC
        LIMIT #{pageNum}, 10
    </select>


    <!--    남원우님 여기 아래부터 작성 시작-->


    <!--    차소영님 여기 아래부터 작성 시작-->

<!--    학생이 수업을 등록하는 기능
학생의 ID(studentIdx)와 수업의 ID(classIdx)를 이용해 class_registration 테이블에 새로운 레코드를 추가한다.-->
        <insert id="registerClass" parameterType="map">
            INSERT INTO class_registration (class_idx, student_idx)
            VALUES (#{classIdx}, #{studentIdx})
        </insert>

<!--    학생이 수업을 취소하는 기능
학생의 ID(studentIdx)와 수업의 ID(classIdx)를 이용해 class_registration 테이블에서 특정 레코드를 삭제한다. -->
        <delete id="cancelClass" parameterType="map">
            DELETE FROM class_registration
            WHERE class_idx = #{classIdx} AND student_idx = #{studentIdx}
        </delete>


<!--    학생이 현재까지 등록한 수업을 조회하는 기능
학생의 ID(studentIdx)를 이용해 class_registration 테이블에서 해당 학생에게 연결된 수업의 ID(classIdx)를 찾고,
class 테이블에서 해당 수업의 정보를 모두 가져온다.-->
        <select id="getRegisteredClasses" resultType="com.example.dto.ClassDTO">
            SELECT * FROM class
            WHERE idx IN (SELECT class_idx FROM class_registration WHERE student_idx = #{studentIdx})
        </select>


    <!--    유지호님 여기 아래부터 작성 시작-->


</mapper>