1. 코드탭 프로젝트 발표 시작하겠습니다.

-----------------------------------------------------

2. 우선 저희 조에 재혁님이 만드신 마이바티스 기술서 발표를 보고 시작하겠습니다. 재혁님은 기말고사 때문에 참석을 하지 못했기 때문에 영상으로 대체하였습니다.

-----------------------------------------------------

3. 지금까지 마이바티스에 대한 기술서였습니다.


-----------------------------------------------------

4. 다음은 목차입니다.


-----------------------------------------------------

5. 저희 프로젝트는 온라인 코딩 강의 사이트인 코드탭입니다. 앞서 재혁님의 영상도 저희가 만든 사이트에서 시청하였습니다.

- 코드탭이라는 이름은 함께 두드리면서 배워나가자는 의미와 코드에서 들여쓰기처럼 친숙해지자는 뜻을 담으면서 다음과 같은 이름을 짓게되었습니다.

- 저희 사이트의 특징은 강의마다 질문 게시판을 통해 수강생들이 선생님에게 질문을 하고 선생님은 답변을 해주면서 선생님과 학생간의 활발한 커뮤니케이션이 이루어질 수 있도록 하였습니다.

-----------------------------------------------------

6. 다음으로 주제를 선정하게 된 이유입니다. 에듀테크 시장의 전망을 통해 온라인 학습 플랫폼에 대한 필요성이 증가할 것이라는 예상과

7. 두 번째로 코딩 교육의 성과와 취업 시장의 수요 부족을 고려해 많은 사람들의 관심이 집중될 수 있는 코딩 교육을 선택하게 되었습니다.


-----------------------------------------------------

8. 한편, 2025년부터 초중학교의 코딩 교육이 의무화되면서 선제적으로 준비하여 초기 시장성을 확보하는 것이 필요하다고 생각하였습니다.


-----------------------------------------------------

9. 마지막으로 학생 수 감소로 인해 연령 타겟층을 더욱 넓혀나가기 위해서는 위와 같은 상품이 적합하다고 팀원들과 논의하며 다음과 같은 주제를 선정하게 되었습니다.

-----------------------------------------------------

10. 진행일정입니다. 마이바티스 환경 구축을 위해 함께 스터디 후 작업을 시작하였습니다.

----------------------------------------------------------------

11. 요구사항명세서입니다. 메인화면은 다음과 같습니다.

11-1.
로그인 회원가입입니다.
학생과 선생님으로 나누어지며, 회원가입 시 유효성검사와 암호화를 통해 가입을 할 수 있습니다. 그리고 선생님은 가입 시 관리자에게 부여받은 승인코드를 입력해야 가입이 가능합니다.


11-2
강의실입니다.
강의실은 현재 등록된 강의와 수강신청한 강의 목록을 확인할 수 있습니다.


11-3
선생님 강의실 또한 등록한 강의에 대해 확인할 수 있습니다. 

11-4
다음은 질의 응답 게시판으로 수강신청한 학생만 질문버튼이 나타납니다. 또한 본인이 질문한 글에 대해서 수정 및 삭제를 할 수 있으며, 선생님 학생 모두 답변을 달 수 있습니다.

11-5
기타메뉴로는 다음과 같습니다.

-----------------------------------------------------

11. 요구사항명세서를 통해 다음과 같이 역할을 분담하였습니다.


-----------------------------------------------------


13. 각 페이지를 개발하기 전에 팀원들과 함께 와이어 프레임을 작성해보았습니다.


-----------------------------------------------------

14. 다음으로 유스케이스 다이어그램입니다. 액터는 선생님, 학생, 비회원으로 나누어져있으며 자세한건 이후에 사이트를 통해 살펴보겠습니다,


-----------------------------------------------------

15. 사용한 테이블의 ER 다이어그램입니다. 사용한 테이블은 총 9개입니다.

16. 클래스 다이어그램입니다.

-----------------------------------------------------

17. 시퀀스 다이어그램은 비회원, 회원, 선생님으로 나누었으며 비회원은 페이지를 보는 기능만, 학생은 수강신청, 질문하기, 선생님은 강의 등록 및 답변을 할 수 있습니다.

-----------------------------------------------------

18. 블록다이어그램입니다. 클라이언트가 서버에 요청하면 컨트롤러, DAO, Mapper, jsp를 통해 다시 응답을 합니다.

-----------------------------------------------------

19. 이번 프로젝트를 진행하면서 사용한 툴들입니다.


-----------------------------------------------------

20.
다음으로는 CRUD의 Creat 기능중에서 질문작성 기능을 살펴보겠습니다.

컨트롤러를 보면 해당 수업의 정보를 넘겨주기 위해서 classIdx를 jsp에서 쿼리 스트링으로 받아오며, 로그인시 넘겨준 세션영역에 저장된 studentIdx와 name을 변수에 저장합니다. 이후 BoardDTO에 각 값에 넣어준 후 DAO를 통해 해당 쿼리로부터 결과값을 받아옵니다.

insertWrite를 보면 값이 저장되었을 경우 1을 반환하며 board 테이블에 저장이 됩니다.

jsp를 보면 form 요소에서 엑션은 사용자가 입력한 데이터가 제출 되었을때 전송될 URL을 입력해줍니다. 따라서 write.do로 데이터가 전송되며, 각 입력 요소의 name 속성은 서버로 전송될 때 입력 필드의 이름과 함께 데이터가 전달됩니다.

21.
질문 상세뷰의 컨트롤러를 보시면 BoardDAO로부터 해당 게시글의 boardIdx 값을 조회해서 값을 가져와 dto에 저장합니다.
jsp에서 dto에 저장된 값을 보여줍니다.

--------------------------------------------------

22.
질문 수정하기를 보면 각 값들을 저장하여 새로운 값들을 dto에 저장해준 후 update 쿼리문을 실행합니다. 각 값들이 들어가면 1을 반환하고 성공시에 이 주소로 이동합니다.
엑션의 주소로 해당 폼의 데이터를 전송합니다. 


---------------------------------------------------

23.
질문 삭제 컨트롤러를 보시면 boardIdx 값을 받아와서 dao의 해당 게시물을 삭제합니다. 이후 
여기서 POST 방식이며, URL은 삭제를 처리할 주소입니다. 그리고 boardIdx와 classIdx 값을 데이터로 전송하며, 서버에서 응답이 success인 경우 삭제되었다는 메시지가 나타납니다.


------------------------------------------------------------
이제 사이트로 가보겠습니다.

- 저희 코드탭 사이트입니다.
- 선생님으로 수업을 등록하겠습니다.
- 학생으로 로그인하여 수업의 게시판에 들어가면 질문하기 버튼이 안보입니다.
- 수강신청을 하고나서 다시 들어가면 질문하기 버튼이 나타나는 것을 확인할 수 있습니다.
- 질문을 쓰면 선생님이 답변을 남겨 줄 것입니다.

지금까지 코드탭 사이트였습니다.

- 저희는 슬랙과 깃을 통해 협업을 하였습니다.

- 그리고 저희 각 주소입니다.

- 이상 코드탭이었습니다. 감사합니다.